/* Looking Glass */

$text_fg_color: #ccc;

// Dialog
#LookingGlassDialog {
  background-color: $osd_bg_color;
  spacing: $base_spacing;
  padding: 0;
  border: 1px solid $osd_borders_color;
  border-radius: $modal_radius;
  color: $osd_fg_color;

  & > #Toolbar {
    border-bottom: 1px solid $osd_borders_color;
    border-radius: $modal_radius $modal_radius 0 0;
    background-color: darken($osd_bg_color , 5%);
    padding: $base_padding;
    spacing: $base_padding;

    .lg-toolbar-button {
      @extend %osd_button;
      padding: $base_padding $base_padding * 2;

      & > StIcon { icon-size: $base_icon_size; }
    }
  }

  .labels { spacing: $base_spacing; }
  .notebook-tab {
    -natural-hpadding: $base_padding * 2;
    -minimum-hpadding: $base_padding * 2;
    font-weight: bold;
    color: darken($osd_fg_color, 15%);
    background: none;
    transition-duration: 100ms;
    padding: $base_padding $base_padding * 2;
    border-bottom: 2px solid transparent;
    border-radius: 0;
    &:hover {
      color: $osd_fg_color;
      border-color: $insensitive_fg_color;
      background: none;
    }
    &:selected {
      border-color: $selected_bg_color;
      color: $osd_fg_color;
      background: none;
    }
  }
  StBoxLayout#EvalBox { padding: 4px; spacing: $base_spacing; }
  StBoxLayout#ResultsArea { spacing: $base_spacing; }
}

.lg-dialog {
  StEntry {
    background-color: transparentize(lighten($osd_bg_color, 5%), 0.4);
    color: $osd_text_color;
    border-color: transparentize($osd_fg_color, 0.8);
    min-height: 22px;
    selection-background-color: $selected_bg_color;
    selected-color: $selected_fg_color;

    &:focus { border-color: $selected_bg_color; }
  }
  .shell-link {
    color: $link_color;
    &:hover { color: lighten($link_color, 10%); }
    &:active { color: darken($link_color, 10%); }
  }
  .actor-link {
    color: $text_fg_color;
    &:hover { color: lighten($text_fg_color, 20%); }
    &:active { color: darken($text_fg_color, 20%); }
  }
}

.lg-completions-text {
  @extend %caption;
  font-style: italic;
}

// Inspector
#LookingGlassPropertyInspector {
  background-color: $osd_bg_color;
  color: $osd_fg_color;
  border-radius: $modal_radius;
  border: 1px solid $osd_borders_color;
  padding: $base_padding * 2;

  .lg-obj-inspector-title {
    @extend %heading;
    spacing: $base_margin;
  }

  .lg-obj-inspector-close-button,
  .lg-obj-inspector-button {
    @extend %osd_button;
    padding: $base_padding $base_padding * 2;
  }

  .lg-obj-inspector-close-button {
    margin: $base_margin;
    padding: $base_padding;
    border-radius: $circular_radius;
    > StIcon {
      icon-size: $base_icon_size;
    }
  }
}

// Evaluator
#LookingGlassEvaluator {
  padding: $base_padding;

  .evaluator-results {
    @extend %monospace;
    spacing: $base_padding;
  }
}

%osd_card {
  background-color: lighten($osd_bg_color, 5%);
  color: $osd_fg_color;
  border-radius: $base_border_radius;
  border: 1px solid $osd_borders_color;
  padding: $base_padding * 2;
}

// Window List
#LookingGlassWindows {
  padding: $base_padding;
  spacing: $base_padding;

  .lg-window {
    @extend %osd_card;
    margin: 0;

    .lg-window-name {
      @extend %heading;
    }
  }
}

// Extensions
#LookingGlassExtensions {
  .lg-extensions-list {
    padding: $base_padding;
    spacing: $base_padding;
  }

  .lg-extension {
    @extend %osd_card;
    margin: 0;
    spacing: $base_margin;

    .lg-extension-name {
      @extend %heading;
      color: $osd_fg_color !important;
    }

    .lg-extension-description {
    }

    .lg-extension-meta {
      spacing: $base_padding * 2;
    }
  }

  .lg-extensions-none {
    @extend %title_4;
    color: transparentize($osd_fg_color, 0.5);
  }
}

// Actors
#LookingGlassActors {
  padding: $base_padding;
  spacing: $base_margin;
}

// Debug
#LookingGlassDebugFlags {
  .lg-debug-flags-header {
    padding: $base_padding;
    padding-top: 2 * $base_padding;
    @extend %title_4;
  }

  .lg-debug-flag-button {
    @extend %osd_button;
    padding: $base_padding * 1.5 $base_padding * 2;
    margin-bottom: $base_padding;

    StLabel {
      @extend %monospace;
      font-weight: normal !important;
    }

    // switch style overrides since lg is OSD style
    .toggle-switch {
    }
  }
}
